{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostingPlanName": {
      "type": "string",
      "metadata": {
        "description": "Your new hosting plan name. This name will be used to form the names of other deployed resources as well."
      }
    },
    "B2BGraphKey": {
      "type": "string",
      "metadata": {
        "description": "The app secret for your B2B application in Azure AD (see docs)"
      }
    },
    "tenantB2B": {
      "type": "string",
      "metadata": {
        "description": "The tenant name, like 'contoso.onmicrosoft.com', for your B2B application in Azure AD (see docs)"
      }
    },
    "clientIdB2B": {
      "type": "string",
      "metadata": {
        "description": "The client ID for your B2B application in Azure AD (see docs)"
      }
    },
    "B2CGraphKey": {
      "type": "string",
      "metadata": {
        "description": "The app secret for your B2C application in Azure AD (see docs)"
      }
    },
    "tenantB2C": {
      "type": "string",
      "metadata": {
        "description": "The tenant name, like 'contoso.onmicrosoft.com', for your B2C application in Azure AD (see docs)"
      }
    },
    "clientIdB2C": {
      "type": "string",
      "metadata": {
        "description": "The client ID for your B2C application in Azure AD (see docs)"
      }
    },
    "ida:SUSIPolicyId": {
      "type": "string",
      "defaultValue": "B2C_1_SignInSignUpPolicy",
      "metadata": {
        "description": "The sign up sign in policy for your B2C application in Azure AD (see docs)"
      }
    },
    "ida:UserProfilePolicyId": {
      "type": "string",
      "defaultValue": "B2C_1_DefaultProfileEditPolicy",
      "metadata": {
        "description": "The user profile policy for your B2C application in Azure AD (see docs)"
      }
    },
    "ida:ResetPwPolicyId": {
      "type": "string",
      "defaultValue": "B2C_1_DefaultReset",
      "metadata": {
        "description": "The password reset profile policy for your B2C application in Azure AD (see docs)"
      }
    },
    "redisSKUName": {
      "type": "string",
      "allowedValues": [ "Basic", "Standard" ],
      "defaultValue": "Basic"
    },
    "redisSKUFamily": {
      "type": "string",
      "allowedValues": [ "C", "P" ],
      "defaultValue": "C",
      "metadata": {
        "description": "Select the performance characteristics for your Redis Cache instance (C=Basic or Standard, P=Premium)"
      }
    },
    "redisSKUCapacity": {
      "type": "int",
      "allowedValues": [ 0, 1, 2, 3, 4, 5, 6 ],
      "defaultValue": 0
    },
    "SqlDBEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [ "Basic", "Standard", "Premium" ],
      "metadata": {
        "description": "Select the performance characteristics for your SQL Database instance"
      }
    },
    "SqlDBRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [ "Basic", "S0", "S1", "S2", "P1", "P2", "P3" ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    }
  },
  "variables": {
    "repoUrl": "https://github.com/bretthacker/Wutnu.git",
    "branch": "dev",
    "sqlserverName": "[concat(parameters('hostingPlanName'), 'Sqlsrv')]",
    "WutNuDBName": "[concat(parameters('hostingPlanName'), 'Db')]",
    "sqlAdministratorLogin": "[concat(parameters('hostingPlanName'), '_app')]",
    "sqlAdministratorLoginPassword": "[concat(uniqueString(subscription().subscriptionId), parameters('hostingPlanName'))]",
    "siteName": "[concat(parameters('hostingPlanName'), 'web')]",
    "redisName": "[concat(parameters('hostingPlanName'),'Cache')]",
    "storageAccountName": "[concat(parameters('hostingPlanName'),'storage')]",
    "storageAcctType": "Standard_LRS",
    "WutNuDBCollation": "SQL_Latin1_General_CP1_CS_AS",
    "redisRedisVersion": "2.8",
    "redisUserDBNum": "1",
    "redisUrlDBNum": "0",
    "deploymentEnvironment": "Prod",
    "siteHostingSKU": "Standard",
    "siteHostingWorkerSize": "0"
  },
  "resources": [
      {
          "name": "[parameters('hostingPlanName')]",
          "type": "Microsoft.Web/serverfarms",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-06-01",
          "dependsOn": [ ],
          "tags": {
              "displayName": "WutNuSiteHosting"
          },
        "properties": {
          "name": "[parameters('hostingPlanName')]",
          "sku": "[variables('siteHostingSKU')]",
          "workerSize": "[variables('siteHostingWorkerSize')]",
          "numberOfWorkers": 1
        }
      },
    {
      "name": "[variables('siteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "WebApp"
      },
      "properties": {
        "name": "[variables('siteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('siteName'))]"
          ],
          "properties": {
            "repoUrl": "[variables('repoUrl')]",
            "branch": "[variables('branch')]",
            "IsManualIntegration": true
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('siteName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "[concat('Microsoft.Cache/Redis/', variables('redisName'))]"
          ],
          "tags": {
            "displayName": "WebSettings"
          },
          "properties": {
            "PROJECT": "Wutnu3\\Wutnu.Web.csproj",
            "DomainName": "[concat(variables('siteName'),'.azurewebsites.net')]",
            "RedisConnection": "[concat(variables('redisName'),'.redis.cache.windows.net', ':6380,ssl=True,abortConnect=False,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('redisName')), '2015-08-01').primaryKey)]",
            "RedisUrlDBNum": "[variables('RedisUrlDBNum')]",
            "RedisUserDBNum": "[variables('RedisUserDBNum')]",
            "StorageConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
            "ActivateWebApiTracing": "false",
            "ida:AadInstanceMulti": "https://login.microsoftonline.com/common",
            "ida:AadInstanceB2B": "https://login.microsoftonline.com/{0}",
            "ida:AadInstanceB2C": "https://login.microsoftonline.com/{0}/v2.0/.well-known/openid-configuration?p={1}",
            "ida:RedirectUri": "[concat('https://', variables('siteName'),'.azurewebsites.net')]",
            "B2BGraphKey": "[parameters('B2BGraphKey')]",
            "B2CGraphKey": "[parameters('B2CGraphKey')]",
            "ida:TenantB2B": "[parameters('TenantB2B')]",
            "ida:ClientIdB2B": "[parameters('ClientIdB2B')]",
            "ida:TenantB2C": "[parameters('TenantB2C')]",
            "ida:ClientIdB2C": "[parameters('ClientIdB2C')]",
            "ida:ResetPolicyId": "[parameters('ida:ResetProfilePolicyId')]",
            "ida:SUSIPolicyId": "[parameters('ida:SUSIPolicyId')]",
            "ida:UserProfilePolicyId": "[parameters('ida:UserProfilePolicyId')]",
            "ConfigStorageCors": "true",
            "Environment": "[variables('DeploymentEnvironment')]",
            "LocalReports": "false",
            "EnableDashboardLogging": "true"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "connectionstrings",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('siteName'))]",
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "properties": {
            "WutNuContext": {
              "value": "[concat('data source=', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName,';initial catalog=',variables('WutNuDBName'),';user id=',variables('sqlAdministratorLogin'), ';password=',variables('sqlAdministratorLoginPassword'),';MultipleActiveResultSets=True;App=EntityFramework;')]",
              "type": "SQLAzure"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('redisName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "RedisCache"
      },
      "properties": {
        "sku": {
          "name": "[parameters('redisSKUName')]",
          "family": "[parameters('redisSKUFamily')]",
          "capacity": "[parameters('redisSKUCapacity')]"
        },
        "redisVersion": "[variables('redisRedisVersion')]"
      }
    },
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "storageAcct"
      },
      "properties": {
        "name": "[variables('storageAccountName')]",
        "accountType": "[variables('storageAcctType')]"
      }
    },
      {
          "name": "[variables('sqlserverName')]",
          "type": "Microsoft.Sql/servers",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [ ],
          "tags": {
              "displayName": "sqlserver"
          },
        "properties": {
          "administratorLogin": "[variables('sqlAdministratorLogin')]",
          "administratorLoginPassword": "[variables('sqlAdministratorLoginPassword')]"
        },
          "resources": [
              {
                  "name": "AllowAllWindowsAzureIps",
                  "type": "firewallrules",
                  "location": "[resourceGroup().location]",
                  "apiVersion": "2014-04-01-preview",
                  "dependsOn": [
                      "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
                  ],
                  "properties": {
                      "startIpAddress": "0.0.0.0",
                      "endIpAddress": "0.0.0.0"
                  }
              },
              {
                  "name": "[variables('WutNuDBName')]",
                  "type": "databases",
                  "location": "[resourceGroup().location]",
                  "apiVersion": "2014-04-01-preview",
                  "dependsOn": [
                      "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
                  ],
                "tags": {
                  "displayName": "[variables('WutNuDBName')]"
                },
                "properties": {
                  "collation": "[variables('WutNuDBCollation')]",
                  "edition": "[parameters('SqlDBEdition')]",
                  "maxSizeBytes": "1073741824",
                  "requestedServiceObjectiveName": "[parameters('SqlDBRequestedServiceObjectiveName')]"
                }
              }
          ]
      }
        
  ],
  "outputs": {
    "sqlFqdn": {
      "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName]",
      "type": "string"
    },
    "sqlName": {
      "value": "[variables('sqlserverName')]",
      "type": "string"
    },
    "sqlUser": {
      "value": "[variables('sqlAdministratorLogin')]",
      "type": "string"
    },
    "sqlPw": {
      "value": "[variables('sqlAdministratorLoginPassword')]",
      "type": "string"
    },
    "sqlDbName": {
      "value": "[variables('WutNuDBName')]",
      "type": "string"
    },
    "websiteName": {
      "value": "[variables('siteName')]",
      "type": "string"
    }
  }
}
